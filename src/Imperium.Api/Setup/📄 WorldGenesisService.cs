using System.Text.Json;
using Imperium.Infrastructure;
using Imperium.Domain.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Imperium.Llm;

namespace Imperium.Api;

/// <summary>
/// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ü–µ—Ä–≤–æ–≥–æ –ú–∏—Ä–∞ Imperium I –≠–ø–æ—Ö–∏.
/// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—É—Å—Ç–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞—ë—Ç –±–∞–∑–æ–≤—ã–π –º–∏—Ä, —Ä–µ—Å—É—Ä—Å—ã, –ø–ª–µ–º–µ–Ω–∞ –∏ —Ö—Ä–æ–Ω–∏–∫—É.
/// </summary>
public static class WorldGenesisService
{
    public static async Task InitializeAsync(ImperiumDbContext db, IServiceProvider services, CancellationToken ct = default)
    {
        if (await db.WorldTimes.AnyAsync(ct))
            return; // –º–∏—Ä —É–∂–µ —Å–æ–∑–¥–∞–Ω

        Console.WriteLine("[WorldGenesis] –°–æ–∑–¥–∞–Ω–∏–µ –ü–µ—Ä–≤–æ–≥–æ –ú–∏—Ä–∞...");

        // 1Ô∏è‚É£ –ë–∞–∑–æ–≤–æ–µ –≤—Ä–µ–º—è
        var worldTime = new WorldTime { Tick = 0, Day = 1, Year = 1, Hour = 6, IsDaytime = true };
        db.WorldTimes.Add(worldTime);

        // 2Ô∏è‚É£ –ö–ª–∏–º–∞—Ç –∏ —Å–µ–∑–æ–Ω—ã
        db.SeasonStates.Add(new SeasonState
        {
            CurrentSeason = "spring",
            AverageTemperatureC = 18,
            AveragePrecipitationMm = 1.2,
            DurationTicks = 2880
        });

        // 3Ô∏è‚É£ –ì–µ–æ–≥—Ä–∞—Ñ–∏—è (–ª–æ–∫–∞—Ü–∏–∏)
        var locations = new[]
        {
            new Location { Id = Guid.NewGuid(), Name = "–°–∏—Ä–∞–∫—É–∑—ã", Latitude = 37.06, Longitude = 15.29, Culture = "hellenic", Population = 540 },
            new Location { Id = Guid.NewGuid(), Name = "–ú–µ—Å—Å–∞–Ω–∞", Latitude = 38.19, Longitude = 15.55, Culture = "hellenic", Population = 320 },
            new Location { Id = Guid.NewGuid(), Name = "–ì—Ä–∞—Å—Ç–∞", Latitude = 37.8, Longitude = 16.2, Culture = "tribal", Population = 210 },
            new Location { Id = Guid.NewGuid(), Name = "–ö–∞–≥–∞–Ω—å—è", Latitude = 38.3, Longitude = 16.7, Culture = "tribal", Population = 190 },
            new Location { Id = Guid.NewGuid(), Name = "–ö–∞–º—Ç–∞–Ω–∞", Latitude = 36.9, Longitude = 17.0, Culture = "tribal", Population = 150 },
            new Location { Id = Guid.NewGuid(), Name = "–ö–µ—Ç–∞–º–∏–∫–æ—Å", Latitude = 37.3, Longitude = 15.0, Culture = "tribal", Population = 170 },
            new Location { Id = Guid.NewGuid(), Name = "–í–Ω–∏–ª–∞", Latitude = 36.8, Longitude = 14.6, Culture = "tribal", Population = 120 },
            new Location { Id = Guid.NewGuid(), Name = "–¢—Ä–æ—Å—Ç–∞", Latitude = 37.1, Longitude = 16.5, Culture = "tribal", Population = 160 },
            new Location { Id = Guid.NewGuid(), Name = "Visca", Latitude = 37.5, Longitude = 15.8, Culture = "tribal", Population = 200 },
        };
        db.Locations.AddRange(locations);

        // 4Ô∏è‚É£ –≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ —Ä–µ—Å—É—Ä—Å—ã
        var resources = new Dictionary<string, object>
        {
            ["wood"] = 5000,
            ["fish"] = 3000,
            ["grain"] = 2500,
            ["iron"] = 400,
            ["stone"] = 1000,
            ["salt"] = 200
        };
        var fauna = new Dictionary<string, object>
        {
            ["deer"] = 120,
            ["wolf"] = 25,
            ["boar"] = 70,
            ["bear"] = 8
        };
        db.EconomySnapshots.Add(new EconomySnapshot
        {
            Timestamp = DateTime.UtcNow,
            ResourcesJson = JsonSerializer.Serialize(resources),
            PricesJson = JsonSerializer.Serialize(new { wood = 1.0, fish = 1.3, grain = 0.9, iron = 3.5, stone = 1.5 }),
            TaxesJson = JsonSerializer.Serialize(new { market = 0.05 }),
            Treasury = 1000m
        });
        db.WeatherSnapshots.Add(new WeatherSnapshot
        {
            Timestamp = DateTime.UtcNow,
            TemperatureC = 20,
            WindKph = 3,
            PrecipitationMm = 0.5,
            DayLengthHours = 13
        });

        // 5Ô∏è‚É£ –ü–µ—Ä–≤—ã–µ —Ñ—Ä–∞–∫—Ü–∏–∏
        var factions = new[]
        {
            new Faction { Name = "–î–æ–º –°–∏—Ä–∞–∫—É–∑", Type = "city_state" },
            new Faction { Name = "–ü–ª–µ–º—è –ö–∞–≥–∞–Ω—å–∏", Type = "tribe" },
            new Faction { Name = "–ü–ª–µ–º—è –ì—Ä–∞—Å—Ç—ã", Type = "tribe" },
            new Faction { Name = "–ü–ª–µ–º—è –ö–∞–º—Ç–∞–Ω—ã", Type = "tribe" },
        };
        db.Factions.AddRange(factions);

        // 6Ô∏è‚É£ –ü–µ—Ä–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ (–≤–æ–∂–¥–∏ –∏ –∂—Ä–µ—Ü—ã)
        var characters = new[]
        {
            new Character { Id = Guid.NewGuid(), Name = "–ê—Ä—Ö–æ–Ω—Ç –§–∏–ª–æ–º–∞—Ö", Gender = "male", LocationId = locations[0].Id },
            new Character { Id = Guid.NewGuid(), Name = "–í–æ–∂–¥—å –ö–∞—Ä–µ—Ç –∏–∑ –ö–∞–≥–∞–Ω—å–∏", Gender = "male", LocationId = locations[3].Id },
            new Character { Id = Guid.NewGuid(), Name = "–ñ—Ä–∏—Ü–∞ –ò–ª–∞—Ä–∏—è –∏–∑ –ì—Ä–∞—Å—Ç—ã", Gender = "female", LocationId = locations[2].Id },
            new Character { Id = Guid.NewGuid(), Name = "–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –î—Ä–∞–∫–æ–Ω –∏–∑ –ö–∞–º—Ç–∞–Ω—ã", Gender = "male", LocationId = locations[4].Id },
        };
        db.Characters.AddRange(characters);

        // 7Ô∏è‚É£ –°—É—â–Ω–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
        db.NpcEssences.AddRange(new[]
        {
            new NpcEssence { CharacterId = characters[0].Id, Strength = 6, Intelligence = 8, Charisma = 9, Vitality = 7, Luck = 5, MutationChance = 0.02 },
            new NpcEssence { CharacterId = characters[1].Id, Strength = 8, Intelligence = 6, Charisma = 7, Vitality = 8, Luck = 4, MutationChance = 0.03 },
            new NpcEssence { CharacterId = characters[2].Id, Strength = 4, Intelligence = 9, Charisma = 8, Vitality = 6, Luck = 6, MutationChance = 0.01 },
            new NpcEssence { CharacterId = characters[3].Id, Strength = 7, Intelligence = 7, Charisma = 6, Vitality = 8, Luck = 5, MutationChance = 0.02 },
        });

        // 8Ô∏è‚É£ –ü–µ—Ä–≤—ã–µ –∑–¥–∞–Ω–∏—è
        db.Buildings.AddRange(new[]
        {
            new Building { LocationId = locations[0].Id, Kind = "acropolis" },
            new Building { LocationId = locations[3].Id, Kind = "tribal_hall" },
            new Building { LocationId = locations[2].Id, Kind = "temple" },
        });

        // 9Ô∏è‚É£ –ü–µ—Ä–≤—ã–µ –∑–Ω–∞–Ω–∏—è
        db.KnowledgeFields.AddRange(new[]
        {
            new KnowledgeField { Name = "–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è" },
            new KnowledgeField { Name = "–ö—É–∑–Ω–µ—á–Ω–æ–µ –¥–µ–ª–æ" },
            new KnowledgeField { Name = "–ù–∞–≤–∏–≥–∞—Ü–∏—è" },
        });

        // üîü –•—Ä–æ–Ω–∏–∫–∞ –Ω–∞—á–∞–ª–∞ –º–∏—Ä–∞
        // Try to generate mythic text via LLM if available
        string chronicleSummary;
        try
        {
            var llm = services.GetService<ILlmClient>();
            if (llm != null)
            {
                var prompt = "Generate a short mythic chronicle of the founding of the first era in Russian, max 120 chars. Return JSON: {summary}";
                var raw = await llm.SendPromptAsync(prompt, ct);
                if (!string.IsNullOrWhiteSpace(raw))
                {
                    try
                    {
                        var json = JsonDocument.Parse(raw);
                        if (json.RootElement.TryGetProperty("summary", out var el)) chronicleSummary = el.GetString() ?? "–ù–∞—á–∞–ª–æ I –≠–ø–æ—Ö–∏.";
                        else chronicleSummary = raw.Trim();
                    }
                    catch
                    {
                        chronicleSummary = raw.Trim();
                    }
                }
                else chronicleSummary = "–ù–∞—á–∞–ª–æ I –≠–ø–æ—Ö–∏: –ø–µ—Ä–≤—ã–µ –ø–æ—Å–µ–ª–µ–Ω–∏—è –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ –±–µ—Ä–µ–≥–∞—Ö –º–æ—Ä–µ–π.";
            }
            else chronicleSummary = "–ù–∞—á–∞–ª–æ I –≠–ø–æ—Ö–∏: –ø–µ—Ä–≤—ã–µ –ø–æ—Å–µ–ª–µ–Ω–∏—è –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ –±–µ—Ä–µ–≥–∞—Ö –º–æ—Ä–µ–π.";
        }
        catch
        {
            chronicleSummary = "–ù–∞—á–∞–ª–æ I –≠–ø–æ—Ö–∏: –ø–µ—Ä–≤—ã–µ –ø–æ—Å–µ–ª–µ–Ω–∏—è –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ –±–µ—Ä–µ–≥–∞—Ö –º–æ—Ä–µ–π.";
        }

        db.WorldChronicles.Add(new WorldChronicle
        {
            Year = 1,
            Summary = chronicleSummary
        });

        // 11Ô∏è‚É£ –ü–µ—Ä–≤—ã–µ —Å–ª—É—Ö–∏
        db.Rumors.AddRange(new[]
        {
            new Rumor { Content = "–ì–æ–≤–æ—Ä—è—Ç, –º–æ—Ä–µ —Ö—Ä–∞–Ω–∏—Ç –ø–∞–º—è—Ç—å –æ –¥—Ä–µ–≤–Ω–∏—Ö –±–æ–≥–∞—Ö, —É—Ç–æ–Ω—É–≤—à–∏—Ö –ø—Ä–∏ —Å–æ—Ç–≤–æ—Ä–µ–Ω–∏–∏ –º–∏—Ä–∞..." },
            new Rumor { Content = "–í –ì—Ä–∞—Å—Ç–µ –Ω–∞–π–¥–µ–Ω –∏—Å—Ç–æ—á–Ω–∏–∫, –≤–æ–¥–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–≤–µ—Ç–∏—Ç—Å—è –Ω–æ—á—å—é." }
        });

        // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        await db.SaveChangesAsync(ct);
        Console.WriteLine("[WorldGenesis] –ú–∏—Ä Imperium I –≠–ø–æ—Ö–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!");
    }
}
